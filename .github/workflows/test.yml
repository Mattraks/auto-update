name: 自动测速

on:
  schedule:
    - cron: '0 16 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MAX_RETRIES: 3  # 最大重试次数，避免无限循环
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      - name: 初始化重试计数器
        id: init_retry
        run: echo "RETRY_COUNT=0" >> $GITHUB_ENV

      # 测速循环：通过条件判断是否重新执行
      - name: 测速与检查（带重试）
        id: speed_test_loop
        run: |
          # 循环执行测速和检查，直到符合条件或达到最大重试次数
          while [ ${{ env.RETRY_COUNT }} -lt ${{ env.MAX_RETRIES }} ]; do
            echo "===== 第 $((RETRY_COUNT + 1)) 次测速 ====="
            
            # 1. 下载 CloudFlare IP 列表
            wget -qO- https://www.cloudflare-cn.com/ips-v4/ | tee ip.txt
            
            # 2. 配置环境
            chmod +x CloudflareST
            pip install pandas
            
            # 3. 执行测速
            ./CloudflareST -cfcolo HKG -sl 5 -n 1000 -dn 5 -o HKG.csv
            ./CloudflareST -cfcolo HKG -sl 5 -n 1000 -dn 5 -o KHH.csv
            ./CloudflareST -cfcolo HKG -sl 5 -n 1000 -dn 5 -o SIN.csv
            ./CloudflareST -cfcolo NRT -sl 5 -n 1000 -dn 5 -o NRT.csv
            ./CloudflareST -cfcolo SEA -sl 5 -n 1000 -dn 5 -o SEA.csv
            rm -f ip.txt
            python csv_to_txt.py
            
            # 4. 检查行数限制（执行脚本，获取状态码）
            python check_test_limit.py
            CHECK_EXIT_CODE=$?
            
            # 5. 如果检查通过（状态码 0），退出循环；否则重试
            if [ $CHECK_EXIT_CODE -eq 0 ]; then
              echo "===== 测速结果符合要求，退出循环 ====="
              exit 0
            else
              echo "===== 行数超限，准备重试 ====="
              RETRY_COUNT=$((RETRY_COUNT + 1))
              echo "RETRY_COUNT=$RETRY_COUNT" >> $GITHUB_ENV
            fi
          done
          
          # 如果达到最大重试次数仍失败，终止工作流
          echo "❌ 达到最大重试次数（${{ env.MAX_RETRIES }}次），仍未符合限制"
          exit 1

      - name: 提交并推送更改
        if: success()  # 只有前面步骤成功时才执行
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add *.txt
          git commit -m "自动优选"
          git push